// Generated by CoffeeScript 1.3.3
(function() {
  var LevelAble, LevelUtil;

  LevelAble = {
    _log: function(level, msg) {
      throw new Error("LevelAble _log(level,msg) has no imp!");
    },
    trace: function(msg) {
      this._log('trace', msg);
    },
    debug: function(msg) {
      this._log('debug', msg);
    },
    info: function(msg) {
      this._log('info', msg);
    },
    warn: function(msg) {
      this._log('warn', msg);
    },
    error: function(msg) {
      this._log('error', msg);
    }
  };

  LevelUtil = {
    LEVELS: {
      'all': 1,
      'trace': 2,
      'debug': 3,
      'info': 4,
      'warn': 5,
      'error': 6,
      'off': 99
    },
    'DEFAULT_LEVEL': 'info',
    validate: function(level) {
      if (this.LEVELS[level]) {
        return true;
      }
      return false;
    },
    isError: function(level) {
      if (level === 'error') {
        return true;
      }
      return false;
    },
    isDebug: function(level) {
      if (level === 'debug') {
        return true;
      }
      return false;
    },
    isLevelAllowed: function(confLevel, callLevel) {
      if (this.LEVELS[confLevel] <= this.LEVELS[callLevel]) {
        return true;
      }
      return false;
    }
  };

  exports.LevelAble = LevelAble;

  exports.LevelUtil = LevelUtil;

}).call(this);
