// Generated by CoffeeScript 1.3.3
(function() {
  var LevelUtil, Sentry, raven, util;

  LevelUtil = require('../core/level').LevelUtil;

  raven = require('raven');

  util = require('util');

  Sentry = (function() {

    function Sentry(dsn, disable) {
      this._client = new raven.Client(dsn);
      this._disable = disable;
      return;
    }

    Sentry.prototype.sendMsg = function(loggerName, level, msgs) {
      var msg, _i, _len;
      if (this._disable) {
        return;
      }
      if (util.isArray(msgs)) {
        for (_i = 0, _len = msgs.length; _i < _len; _i++) {
          msg = msgs[_i];
          this._send(loggerName, level, msg);
        }
      } else {
        this._send(loggerName, level, msgs);
      }
    };

    Sentry.prototype._send = function(loggerName, level, msg) {
      if (LevelUtil.isError(level)) {
        this._client.captureError(msg, {
          level: "error",
          logger: loggerName
        });
      } else if (LevelUtil.isDebug(level)) {
        this._client.captureMessage(msg, {
          level: "debug",
          logger: loggerName
        });
      } else {
        this._client.captureMessage(msg, {
          level: "info",
          logger: loggerName
        });
      }
    };

    Sentry.prototype.getInstance = function(dsn, disable) {
      return new Sentry(dsn, disable);
    };

    return Sentry;

  })();

  exports.Sentry = Sentry;

}).call(this);
